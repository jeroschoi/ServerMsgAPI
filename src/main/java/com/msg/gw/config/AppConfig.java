package com.msg.gw.config;import org.springframework.beans.BeansException;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.ApplicationContext;import org.springframework.context.ApplicationContextAware;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.context.annotation.PropertySource;import org.springframework.core.io.Resource;import javax.annotation.Resources;import java.io.FileInputStream;import java.io.FileNotFoundException;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import java.util.Map;import java.util.Properties;import java.util.stream.Collectors;import java.util.stream.Stream;@Configurationpublic class AppConfig implements ApplicationContextAware {			/**		 * Spring App Static var		 */	    private static ApplicationContext context;	    private static Map<String,String> prop;	    @Override	    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {	        context = applicationContext;	        String[] beanName = context.getBeanDefinitionNames();	        for(String bean:beanName) {	        	System.out.println(bean);	        }	        // File to Map            try {                Resource rs = context.getResource("classpath:config/prop/prop.properties");                Path path = Paths.get(rs.getURI());                //prop.load(new FileInputStream(context.getResource("classpath:config/prop/prop.properties").getFile()));                Stream<String> lineStream = Files.lines(path);                Stream<String> filterStream = lineStream.filter(s -> !s.startsWith("##"));                prop = filterStream.map(s->s.split("=")).collect(Collectors.toMap(a->a[0] , a->a[1]));                System.out.println(prop.toString());            } catch (IOException e) {                e.printStackTrace();            }        }        @Bean	    public static ApplicationContext getContext() {	        return context;	    }        @Bean        public static Map getConfig() {            return prop;        }}